x make work multi-platform: on mac, linux and windows
x allow user to select mitsuba binary
x make it possible to persist render settings
x integrate plugins, shaders into python package
x get result of call
x print output from render
x replace os.system with process class
x allow user to retain intermediate files (.obj, .xml)
x force objexport to load

x support animatable, rotating environment maps
x support animated textures
x support area lights
x fix compute method for all materials - if plug == sunsky.mOutColor

x branch git repo
x rename windows_64 to plug-ins
x remove materials.py, render.py, scriptEditor.py, tempo.py, test.mel, test2.py, champagne.ma

x support colored area lights
x change render working directory to output image directory. keep only one log.

x support general cameras, not just camera, aim, up combinations

x move materials into 'materials'
x add __init__.py as appropriate
x support batch / animated renders

x hookup verbose render setting

x remove dependence on UI to drive render parameters
x add support for persisting render settings
 x filters
 x samplers
 x integrators - Path Tracer
 x The rest of the integrators

x add support for more light types - point, spot
x add support for more sensor types
 x orthographic

x centralize / standardize xml writing

x add support for more sensor types
 x spherical, telecentric, radiancemeter, fluencemeter, perspective_rdist

add support for more film types and parameters
- tiled rendering
- crop coordinates (pulled from general render settings)

add support for meta-integrators
- adaptive, irrcache
add support for multi-channel rendering, with supported integrators
-  ao, direct, path, volpath, volpath_simple, and irrcache.

add support for writing lightmaps using irradiancemeter sensor type

generalize support for volumes

support render cancel
support batch render cancel
support interactive render view / update / cancel

support animated parameters in batch mode

create renderData/mitsuba directory for temporary render files

indent code to 4 space tabs
replace all mel functions with automatically generated mel which immediately calls back into Python
make plugin ids consistent

replace xml writing with etree

Note references
http://knowledge.autodesk.com/support/maya/troubleshooting/caas/sfdcarticles/sfdcarticles/Registering-a-custom-renderer-for-batch-rendering.html

http://help.autodesk.com/view/MAYAUL/2016/ENU/

https://github.com/haggi/OpenMaya/blob/master/src/common/python/Renderer/__init__.py


Location to copy .mod and .xml files
- Is there a better place, i.e. in /Users/Shared/Autodesk/.... ?
/Applications/Autodesk/maya2016/Maya.app/Contents/modules/
/Applications/Autodesk/maya2016/Maya.app/Contents/bin/rendererDesc/


Notes on usage
- Energyredistributionpathtracing, maxChains is noted as a float attribute in the documentation but the implementation expects an integer
- Energyredistributionpathtracing seems to render, with continuous "Unable to recreate specular vertex in perturbation" errors
- Progressive Photon Map crashes






